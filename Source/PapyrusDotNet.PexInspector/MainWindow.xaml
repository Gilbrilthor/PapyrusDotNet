<Window x:Class="PapyrusDotNet.PexInspector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PapyrusDotNet.PexInspector"
        xmlns:viewModels="clr-namespace:PapyrusDotNet.PexInspector.ViewModels;assembly=PapyrusDotNet.PexInspector.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:converters="clr-namespace:PapyrusDotNet.PexInspector.Converters"
        xmlns:papyrusAssembly="clr-namespace:PapyrusDotNet.PapyrusAssembly;assembly=PapyrusDotNet.PapyrusAssembly"
        xmlns:behaviours="clr-namespace:PapyrusDotNet.PexInspector.Behaviours"
        d:DataContext="{x:Static viewModels:MainWindowViewModel.DesignInstance}"
        mc:Ignorable="d"
        Title="PapyrusDotNet PexInspector - PreAlpha" Height="610" Width="871">
    <Window.Resources>
        <converters:PapyrusInstructionDisplayConverter x:Key="PapyrusInstructionDisplayConverter"/>
        <converters:PapyrusInstructionOperandConverter x:Key="PapyrusInstructionOperandConverter"/>
        <converters:PapyrusArrayDisplayConverter x:Key="PapyrusArrayDisplayConverter"/>
    </Window.Resources>
    <Grid>
        <Menu x:Name="menu" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="{x:Null}">
            <Menu.Items>
                <MenuItem Header="File">
                    <MenuItem.Items>
                        <MenuItem Header="Open" Command="{Binding OpenPexCommand}"></MenuItem>
                        <Separator/>
                        <!-- <MenuItem Header="Save" Command="{Binding SavePexCommand}"></MenuItem>
                        <MenuItem Header="Save As" Command="{Binding SavePexAsCommand}"></MenuItem>
                        <Separator/> -->
                        <MenuItem Header="Exit" Command="{Binding ExitCommand}"></MenuItem>
                    </MenuItem.Items>
                </MenuItem>
            </Menu.Items>
        </Menu>
        <Grid Margin="0,26,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="190*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="400*"/>
            </Grid.ColumnDefinitions>
            <TreeView x:Name="treeView" ItemsSource="{Binding PexTree}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <command:EventToCommand Command="{Binding SelectedMemberCommand}" CommandParameter="{Binding ElementName=treeView,Path=SelectedValue}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" Margin="0,2">
                            <Image Name="img" Width="16" Height="16" Stretch="Fill" Source="{Binding Icon}"/>
                            <TextBlock Text="{Binding Text}" Margin="5,0" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

                <TreeView.ContextMenu>
                    <ContextMenu>

                    </ContextMenu>
                </TreeView.ContextMenu>
            </TreeView>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
            <TabControl Grid.Column="2" >
                <TabItem Header="Instructions">
                    <TabItem.Content>
                        <DataGrid x:Name="instructionsList" ItemsSource="{Binding SelectedMethodInstructions}" 
                                  SelectedItem="{Binding SelectedMethodInstruction}"
                                  MinRowHeight="22"
                                  VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"                                  
                                  AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" SelectionMode="Single" SelectionUnit="FullRow"
                                  behaviours:DataGridBehaviour.DisplayRowNumber="True">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Insert Before..." Command="{Binding DataContext.InsertBeforeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                    <MenuItem Header="Insert After..." Command="{Binding DataContext.InsertAfterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" ></MenuItem>
                                    <MenuItem Header="Edit..." Command="{Binding DataContext.EditInstructionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" ></MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Delete" Command="{Binding DataContext.RemoveInstructionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" ></MenuItem>
                                    <!--<MenuItem Header="More Info" Command="{Binding Path=DataContext.MoreInfo, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke" />-->
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}" >
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>

                                <DataGridTemplateColumn  Header="Offset" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                            <TextBlock Text="{Binding Offset}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Header="OpCode">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                            <TextBlock Text="{Binding OpCode}" VerticalAlignment="Center" Margin="5,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Header="Operand">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                            <TextBlock Text="{Binding Operand, Converter={StaticResource PapyrusInstructionOperandConverter}}" VerticalAlignment="Center"  Margin="5,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn  Header="Arguments">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                            <TextBlock Text="{Binding Arguments, Converter={StaticResource PapyrusArrayDisplayConverter}}" VerticalAlignment="Center" Margin="5,0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn  Header="Operand Arguments">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                            <TextBlock Text="{Binding OperandArguments, Converter={StaticResource PapyrusArrayDisplayConverter}}" VerticalAlignment="Center" Margin="5,0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem.Content>
                </TabItem>
                <TabItem Header="Variables">
                    <TabItem.Content>


                        <DataGrid x:Name="variableList"  ItemsSource="{Binding SelectedMethodVariables}"
                                  MinRowHeight="22"
                                  VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"
                                  AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" SelectionMode="Single" SelectionUnit="FullRow"
                                  behaviours:DataGridBehaviour.DisplayRowNumber="True">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Create new..." Command="{Binding DataContext.CreateVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                    <MenuItem Header="Edit..." Command="{Binding DataContext.EditVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Delete" Command="{Binding DataContext.DeleteVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                </ContextMenu>

                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}" >
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>

                                <DataGridTemplateColumn  Header="Name" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusVariableReference}">
                                            <TextBlock Text="{Binding Path=Name.Value}" VerticalAlignment="Center" Margin="5,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn  Header="Variable Type" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusVariableReference}">
                                            <TextBlock Text="{Binding Path=TypeName.Value}" VerticalAlignment="Center" Margin="5,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                    </TabItem.Content>
                </TabItem>
                <TabItem Header="Parameters">
                    <TabItem.Content>
                        <DataGrid x:Name="parameterist"  ItemsSource="{Binding SelectedMethodParameters}"
                                  MinRowHeight="22"
                                  VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"
                                  AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" SelectionMode="Single" SelectionUnit="FullRow"
                                  behaviours:DataGridBehaviour.DisplayRowNumber="True">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.Resources>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Create new..." Command="{Binding DataContext.CreateParameterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                    <MenuItem Header="Edit..." Command="{Binding DataContext.EditParameterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Delete" Command="{Binding DataContext.DeleteParameterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>
                                </ContextMenu>

                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}" >
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>

                                <DataGridTemplateColumn  Header="Name" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusParameterDefinition}">
                                            <TextBlock Text="{Binding Path=Name.Value}" VerticalAlignment="Center" Margin="5,0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn  Header="Variable Type" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type papyrusAssembly:PapyrusParameterDefinition}">
                                            <TextBlock Text="{Binding Path=TypeName.Value}" VerticalAlignment="Center" Margin="5,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem.Content>
                </TabItem>
            </TabControl>

        </Grid>
    </Grid>
</Window>
