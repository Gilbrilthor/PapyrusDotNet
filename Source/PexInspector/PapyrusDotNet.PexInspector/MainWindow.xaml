<Window x:Class="PapyrusDotNet.PexInspector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PapyrusDotNet.PexInspector"
        xmlns:viewModels="clr-namespace:PapyrusDotNet.PexInspector.ViewModels;assembly=PapyrusDotNet.PexInspector.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:converters="clr-namespace:PapyrusDotNet.PexInspector.Converters"
        xmlns:papyrusAssembly="clr-namespace:PapyrusDotNet.PapyrusAssembly;assembly=PapyrusDotNet.PapyrusAssembly"
        xmlns:behaviours="clr-namespace:PapyrusDotNet.PexInspector.Behaviours"
        xmlns:controls="clr-namespace:PapyrusDotNet.PexInspector.Controls"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        d:DataContext="{x:Static viewModels:MainWindowViewModel.DesignInstance}"
        mc:Ignorable="d"
        Title="PapyrusDotNet PexInspector - v0.2.0 Alpha by Zerratar" Height="780" Width="1024">

    <!---->

    <Window.Resources>
        <converters:PapyrusInstructionDisplayConverter x:Key="PapyrusInstructionDisplayConverter" />
        <converters:PapyrusInstructionOperandConverter x:Key="PapyrusInstructionOperandConverter" />
        <converters:PapyrusArrayDisplayConverter x:Key="PapyrusArrayDisplayConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenPexCommand}" />
        <KeyBinding Key="R" Modifiers="Control" Command="{Binding ReloadPexCommand}" />
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SavePexCommand}" />
    </Window.InputBindings>

    <DockPanel>


        <Menu x:Name="menu" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="{x:Null}"
              DockPanel.Dock="Top">
            <Menu.Items>
                <MenuItem Header="_File">
                    <MenuItem.Items>
                        <MenuItem Header="_Open" Command="{Binding OpenPexCommand}" InputGestureText="Ctrl+O" />
                        <Separator />
                        <!-- <MenuItem Header="Save" Command="{Binding SavePexCommand}"></MenuItem>
                        <MenuItem Header="Save As" Command="{Binding SavePexAsCommand}"></MenuItem>
                        <Separator/> -->
                        <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4" />
                    </MenuItem.Items>
                </MenuItem>
                <MenuItem Header="_Tools" IsEnabled="False">
                    <MenuItem.Items>
                        <MenuItem Header="_Validator" IsEnabled="False">
                            <MenuItem.Items>
                                <MenuItem Header="Validate _Selected Script"
                                          Command="{Binding ValidateSelectedScriptCommand}" />
                                <MenuItem Header="Validate Selected Script and its _References"
                                          Command="{Binding ValidateSelectedScriptAndReferencesCommand}" />
                                <MenuItem Header="Validate _All loaded Scripts"
                                          Command="{Binding ValidateAllScriptsCommand}" />
                            </MenuItem.Items>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="_Settings" Command="{Binding OpenSettingsCommand}" />
                    </MenuItem.Items>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem.Items>
                        <MenuItem Header="_Documentation" Command="{Binding OpenDocumentationCommand}"
                                  IsEnabled="False" />
                        <Separator />
                        <MenuItem Header="_About" Command="{Binding OpenAboutCommand}" />
                    </MenuItem.Items>
                </MenuItem>
            </Menu.Items>
        </Menu>

        <ToolBarTray DockPanel.Dock="Top" Background="WhiteSmoke" Height="32.04">
            <ToolBar ToolBarTray.IsLocked="True" ToolBar.OverflowMode="Never" Height="32" Background="{x:Null}"
                     Loaded="ToolBar_Loaded">
                <Button Command="{Binding OpenPexCommand}" Content="&#xf07c;" TextOptions.TextFormattingMode="Ideal"
                        ToolTip="Open Script" FontFamily="/Assets/Fonts/#FontAwesome" FontSize="16" Margin="1,0,0,0" />
                <Button Command="{Binding ReloadPexCommand}" Content="&#xf021;" TextOptions.TextFormattingMode="Ideal"
                        ToolTip="Reload Script" FontFamily="/Assets/Fonts/#FontAwesome" FontSize="16" Margin="5,0,0,0" />
                <Button Command="{Binding SavePexCommand}" Content="&#xf0c7;" TextOptions.TextFormattingMode="Ideal"
                        ToolTip="Save Script" FontFamily="/Assets/Fonts/#FontAwesome" FontSize="16" Margin="5,0,0,0" />
            </ToolBar>
        </ToolBarTray>

        <Grid DockPanel.Dock="Bottom">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="190*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="400*" />
                </Grid.ColumnDefinitions>
                <TreeView x:Name="treeView" ItemsSource="{Binding PexTree}" Margin="0,0,0,90"
                          SelectedItemChanged="TreeView_OnSelectedItemChanged" AllowDrop="True" Drop="TreeView_OnDrop">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <command:EventToCommand Command="{Binding SelectedMemberCommand}"
                                                    CommandParameter="{Binding ElementName=treeView,Path=SelectedValue}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="RequestBringIntoView" Handler="TreeViewItem_RequestBringIntoView" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>
                        <ContextMenu x:Key="rowContextMenu" Opened="RowContextMenu_OnOpened">
                            <MenuItem Header="Reload" CommandParameter="{Binding}"
                                      Command="{Binding Path=DataContext.ReloadPexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <Separator />
                            <MenuItem Header="Save" CommandParameter="{Binding}"
                                      Command="{Binding Path=DataContext.SavePexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <Separator />
                            <MenuItem Header="New...">
                                <MenuItem.Items>
                                    <MenuItem Header="State"
                                              Command="{Binding Path=DataContext.CreateStateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                                        <MenuItem.Icon>
                                            <Image Source="/Assets/Icons/state.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Method"
                                              Command="{Binding Path=DataContext.CreateMethodCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                                        <MenuItem.Icon>
                                            <Image Source="/Assets/Icons/method.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Field"
                                              Command="{Binding Path=DataContext.CreateFieldCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                                        <MenuItem.Icon>
                                            <Image Source="/Assets/Icons/field.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Property"
                                              Command="{Binding Path=DataContext.CreatePropertyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                                        <MenuItem.Icon>
                                            <Image Source="/Assets/Icons/property.png" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </MenuItem.Items>
                            </MenuItem>
                            <MenuItem Header="Edit" CommandParameter="{Binding}"
                                      Command="{Binding Path=DataContext.EditMemberCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <MenuItem Header="Delete" CommandParameter="{Binding}"
                                      Command="{Binding Path=DataContext.DeleteMemberCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <Separator />
                            <MenuItem Header="Find All Usages" CommandParameter="{Binding}"
                                      Command="{Binding Path=DataContext.FindAllUsagesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <MenuItem Header="Find All References" CommandParameter="{Binding}"
                                      Command="{Binding Path=DataContext.FindAllReferencesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <!--<MenuItem Header="Save As" CommandParameter="{Binding}" Command="{Binding Path=DataContext.SavePexAsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"></MenuItem>-->
                        </ContextMenu>
                    </TreeView.Resources>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <Border x:Name="Border">
                                <StackPanel Orientation="Horizontal" Margin="0,2">
                                    <Image Name="img" Width="16" Height="16" Stretch="Fill" Source="{Binding Icon}" />
                                    <TextBlock Text="{Binding Text}" x:Name="RowText" Margin="5,0" />
                                    <TextBlock Text="[Modded]" Foreground="Red"
                                               Visibility="{Binding IsDirty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </StackPanel>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="ContextMenu" Value="{StaticResource rowContextMenu}" />
                                    </Style>
                                </Border.Style>
                            </Border>
                            <HierarchicalDataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="RowText" Property="TextDecorations" Value="Underline" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="false">
                                <Setter TargetName="RowText" Property="TextDecorations" Value="{x:Static TextDecorations.}"/>
                            </Trigger>-->
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>


                </TreeView>
                <Border Grid.Column="0" Height="90" VerticalAlignment="Bottom" BorderBrush="#FF828790"
                        BorderThickness="1,0">
                    <Grid Background="White">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto">
                            <StackPanel Orientation="Vertical" Margin="5" HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                <!--<TextBlock Text="{Binding SelectedMemberName}" HorizontalAlignment="Left" VerticalAlignment="Top" />-->
                                <controls:BindableTextBlock HorizontalAlignment="Left" VerticalAlignment="Top"
                                                            FontSize="15" Margin="0,0,0,3"
                                                            InlineList="{Binding SelectedMemberName}" />
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Run>Flags:</Run><Run Text="    " />
                                    <Run Text="{Binding SelectedMemberFlags}" FontWeight="DemiBold" />
                                </TextBlock>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Run>Game:</Run><Run Text="   " />
                                    <Run Text="{Binding TargetGameName}" FontWeight="DemiBold" />
                                </TextBlock>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Border>
                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

                <xcad:DockingManager Grid.Column="2">
                    <xcad:LayoutRoot x:Name="_layoutRoot">
                        <xcad:LayoutPanel Orientation="Vertical">
                            <xcad:LayoutAnchorablePane x:Name="TopAnchorablePanel" DockHeight="150">
                                <xcad:LayoutAnchorable ContentId="Source" Title="Source" CanHide="False"
                                                       CanClose="False"
                                                       AutoHideWidth="240"
                                                       IconSource="/Assets/Icons/Method.png">
                                    <avalonedit:TextEditor
                                        Name="textEditor"
                                        FontFamily="Consolas"
                                        FontSize="12pt"
                                        ShowLineNumbers="True" IsReadOnly="True" WordWrap="False"
                                        SyntaxHighlighting="Papyrus">
                                        <i:Interaction.Behaviors>
                                            <behaviours:AvalonEditBehaviour
                                                DocumentText="{Binding DecompiledMemberText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </i:Interaction.Behaviors>
                                    </avalonedit:TextEditor>
                                </xcad:LayoutAnchorable>
                            </xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorablePane x:Name="AnchorablePane" DockWidth="200">
                                <xcad:LayoutAnchorable ContentId="Method" Title="Method Inspection" CanHide="False"
                                                       CanClose="False"
                                                       AutoHideWidth="240"
                                                       IconSource="/Assets/Icons/Method.png">

                                    <TabControl>
                                        <TabItem Header="Instructions">
                                            <TabItem.Content>
                                                <DataGrid ItemsSource="{Binding SelectedMethodInstructions}"
                                                          SelectedItem="{Binding SelectedMethodInstruction, Mode=TwoWay}"
                                                          MinRowHeight="22"
                                                          VerticalGridLinesBrush="LightGray"
                                                          HorizontalGridLinesBrush="LightGray"
                                                          AutoGenerateColumns="False" CanUserSortColumns="False"
                                                          CanUserAddRows="False" CanUserReorderColumns="False"
                                                          SelectionMode="Single" SelectionUnit="FullRow"
                                                          behaviours:DataGridBehaviour.DisplayRowNumber="True">
                                                    <DataGrid.CellStyle>
                                                        <Style TargetType="DataGridCell">
                                                            <Setter Property="BorderThickness" Value="0" />
                                                        </Style>
                                                    </DataGrid.CellStyle>
                                                    <DataGrid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="New..."
                                                                      Command="{Binding CreateInstructionCommand}" />
                                                        </ContextMenu>
                                                    </DataGrid.ContextMenu>
                                                    <DataGrid.Resources>
                                                        <ContextMenu x:Key="ItemContextMenu">
                                                            <MenuItem Header="Insert Before..."
                                                                      Command="{Binding DataContext.InsertBeforeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <MenuItem Header="Insert After..."
                                                                      Command="{Binding DataContext.InsertAfterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <MenuItem Header="Edit..."
                                                                      Command="{Binding DataContext.EditInstructionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <Separator />
                                                            <MenuItem Header="Delete"
                                                                      Command="{Binding DataContext.RemoveInstructionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <!--<MenuItem Header="More Info" Command="{Binding Path=DataContext.MoreInfo, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke" />-->
                                                        </ContextMenu>
                                                    </DataGrid.Resources>
                                                    <DataGrid.RowStyle>
                                                        <Style TargetType="{x:Type DataGridRow}">
                                                            <Setter Property="ContextMenu"
                                                                    Value="{StaticResource ItemContextMenu}" />
                                                        </Style>
                                                    </DataGrid.RowStyle>
                                                    <DataGrid.Columns>

                                                        <DataGridTemplateColumn Header="Offset">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                                                    <TextBlock Text="{Binding Offset}"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Center" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="OpCode">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                                                    <TextBlock Text="{Binding OpCode}"
                                                                               VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="Operand">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                                                    <TextBlock
                                                                        Text="{Binding Operand, Converter={StaticResource PapyrusInstructionOperandConverter}}"
                                                                        VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                        <DataGridTemplateColumn Header="Arguments">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                                                    <controls:BindableTextBlock
                                                                        InlineList="{Binding Arguments, Converter={StaticResource PapyrusArrayDisplayConverter}}"
                                                                        VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                        <DataGridTemplateColumn Header="Operand Arguments">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusInstruction}">
                                                                    <controls:BindableTextBlock
                                                                        InlineList="{Binding OperandArguments, Converter={StaticResource PapyrusArrayDisplayConverter}}"
                                                                        VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                    </DataGrid.Columns>
                                                </DataGrid>
                                            </TabItem.Content>
                                        </TabItem>
                                        <TabItem Header="Variables">
                                            <TabItem.Content>


                                                <DataGrid ItemsSource="{Binding SelectedMethodVariables}"
                                                          SelectedItem="{Binding SelectedMethodVariable}"
                                                          MinRowHeight="22"
                                                          VerticalGridLinesBrush="LightGray"
                                                          HorizontalGridLinesBrush="LightGray"
                                                          AutoGenerateColumns="False" CanUserSortColumns="False"
                                                          CanUserAddRows="False"
                                                          CanUserReorderColumns="False" SelectionMode="Single"
                                                          SelectionUnit="FullRow"
                                                          behaviours:DataGridBehaviour.DisplayRowNumber="True">
                                                    <DataGrid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="New..."
                                                                      Command="{Binding CreateVariableCommand}" />
                                                        </ContextMenu>
                                                    </DataGrid.ContextMenu>
                                                    <DataGrid.CellStyle>
                                                        <Style TargetType="DataGridCell">
                                                            <Setter Property="BorderThickness" Value="0" />
                                                        </Style>
                                                    </DataGrid.CellStyle>
                                                    <DataGrid.Resources>
                                                        <ContextMenu x:Key="ItemContextMenu">
                                                            <MenuItem Header="Create new..."
                                                                      Command="{Binding DataContext.CreateVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <MenuItem Header="Edit..."
                                                                      Command="{Binding DataContext.EditVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <Separator />
                                                            <MenuItem Header="Delete"
                                                                      Command="{Binding DataContext.DeleteVariableCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                        </ContextMenu>

                                                    </DataGrid.Resources>
                                                    <DataGrid.RowStyle>
                                                        <Style TargetType="{x:Type DataGridRow}">
                                                            <Setter Property="ContextMenu"
                                                                    Value="{StaticResource ItemContextMenu}" />
                                                        </Style>
                                                    </DataGrid.RowStyle>
                                                    <DataGrid.Columns>

                                                        <DataGridTemplateColumn Header="Name">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusVariableReference}">
                                                                    <TextBlock Text="{Binding Path=Name.Value}"
                                                                               VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                        <DataGridTemplateColumn Header="Variable Type">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusVariableReference}">
                                                                    <TextBlock Text="{Binding Path=TypeName.Value}"
                                                                               VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                    </DataGrid.Columns>
                                                </DataGrid>

                                            </TabItem.Content>
                                        </TabItem>
                                        <TabItem Header="Parameters">
                                            <TabItem.Content>
                                                <DataGrid ItemsSource="{Binding SelectedMethodParameters}"
                                                          SelectedItem="{Binding SelectedMethodParameter}"
                                                          MinRowHeight="22"
                                                          VerticalGridLinesBrush="LightGray"
                                                          HorizontalGridLinesBrush="LightGray"
                                                          AutoGenerateColumns="False" CanUserSortColumns="False"
                                                          CanUserAddRows="False"
                                                          CanUserReorderColumns="False" SelectionMode="Single"
                                                          SelectionUnit="FullRow"
                                                          behaviours:DataGridBehaviour.DisplayRowNumber="True">
                                                    <DataGrid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="New..."
                                                                      Command="{Binding CreateParameterCommand}" />
                                                        </ContextMenu>
                                                    </DataGrid.ContextMenu>
                                                    <DataGrid.CellStyle>
                                                        <Style TargetType="DataGridCell">
                                                            <Setter Property="BorderThickness" Value="0" />
                                                        </Style>
                                                    </DataGrid.CellStyle>
                                                    <DataGrid.Resources>
                                                        <ContextMenu x:Key="ItemContextMenu">
                                                            <MenuItem Header="Create new..."
                                                                      Command="{Binding DataContext.CreateParameterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <MenuItem Header="Edit..."
                                                                      Command="{Binding DataContext.EditParameterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                            <Separator />
                                                            <MenuItem Header="Delete"
                                                                      Command="{Binding DataContext.DeleteParameterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                                                        </ContextMenu>

                                                    </DataGrid.Resources>
                                                    <DataGrid.RowStyle>
                                                        <Style TargetType="{x:Type DataGridRow}">
                                                            <Setter Property="ContextMenu"
                                                                    Value="{StaticResource ItemContextMenu}" />
                                                        </Style>
                                                    </DataGrid.RowStyle>
                                                    <DataGrid.Columns>

                                                        <DataGridTemplateColumn Header="Name">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusParameterDefinition}">
                                                                    <TextBlock Text="{Binding Path=Name.Value}"
                                                                               VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                        <DataGridTemplateColumn Header="Variable Type">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate
                                                                    DataType="{x:Type papyrusAssembly:PapyrusParameterDefinition}">
                                                                    <TextBlock Text="{Binding Path=TypeName.Value}"
                                                                               VerticalAlignment="Center" Margin="5,0" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>

                                                    </DataGrid.Columns>
                                                </DataGrid>
                                            </TabItem.Content>
                                        </TabItem>
                                    </TabControl>
                                </xcad:LayoutAnchorable>

                                <xcad:LayoutAnchorable ContentId="FindResults" Title="Find Results" CanHide="False"
                                                       CanClose="False"
                                                       IconSource="/Assets/Icons/FindResults.png">
                                    <Grid>
                                        <TreeView ItemsSource="{Binding FindResultTree}">
                                            <!--<TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <EventSetter Event="MouseDoubleClick" Handler="UsageItemDoubleClick" />
                                        </Style>
                                    </TreeView.ItemContainerStyle>-->
                                        </TreeView>
                                    </Grid>
                                </xcad:LayoutAnchorable>
                            </xcad:LayoutAnchorablePane>
                        </xcad:LayoutPanel>
                    </xcad:LayoutRoot>
                </xcad:DockingManager>

            </Grid>
        </Grid>
    </DockPanel>
</Window>